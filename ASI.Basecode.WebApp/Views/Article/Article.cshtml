@using System.Collections.Generic
@model ArticleDetailViewModel

<div class="article-container">
    <div id="viewMode">
        <h2>@Model.Article.Title</h2>
        <div class="article-meta">
            <span class="meta-item">Created by: @Model.Article.CreatedByName</span>
            <span class="meta-item">Created on: @Model.Article.CreatedOn.ToString("g")</span>
        </div>
        
        <div class="article-content mt-4 p-4 bg-light border rounded">
            @Model.Article.Content
        </div>

        <div class="article-actions mt-3">
            <button type="button" class="btn btn-primary" onclick="toggleEditMode()">Edit</button>
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </div>
    </div>

    <div id="editMode" style="display: none;">
        <form id="editArticleForm">
            <input type="hidden" name="ArticleId" value="@Model.Article.ArticleId" />
            <div class="form-group">
                <label for="Title">Title</label>
                <input type="text" class="form-control" id="Title" name="Title" value="@Model.Article.Title" required>
            </div>
            <div class="form-group">
                <label for="Content">Content</label>
                <textarea class="form-control" id="Content" name="Content" rows="10" required>@Model.Article.Content</textarea>
            </div>
            <div class="mt-3">
                <button type="submit" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" onclick="toggleEditMode()">Cancel</button>
            </div>
        </form>
    </div>

    <h3 class="mt-4">Version History</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Version Date</th>
                <th>Title</th>
                <th>Modified By</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var version in Model.Versions)
            {
                <tr style="cursor: pointer;" onclick="showVersionDetails(@version.VersionId)">
                    <td>@version.VersionDate.ToString("g")</td>
                    <td>@version.Title</td>
                    <td>@version.VersionedByName</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Version Details Modal -->
    <div class="modal fade" id="versionDetailsModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Article Version</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="version-meta mb-3">
                        <h4 id="versionTitle" class="mb-3"></h4>
                        <small class="text-muted">
                            Modified by <span id="versionAuthor"></span> on <span id="versionDate"></span>
                        </small>
                    </div>
                    <div class="version-content mt-4">
                        <div id="versionContent" class="bg-light p-3 rounded"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="restoreVersion()">Restore This Version</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function toggleEditMode() {
            $('#viewMode').toggle();
            $('#editMode').toggle();
        }

        $(document).ready(function() {
            $('#editArticleForm').submit(function(e) {
                e.preventDefault();
                $.ajax({
                    url: '/Article/Edit',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to update article');
                        }
                    },
                    error: function() {
                        toastr.error('An error occurred while updating the article');
                    }
                });
            });
        });

        let currentVersionId = null;

        function showVersionDetails(versionId) {
            currentVersionId = versionId;
            
            $.ajax({
                url: '/ArticleVersion/GetVersion',
                type: 'GET',
                data: { versionId: versionId },
                success: function(version) {
                    console.log('Version details:', version);
                    
                    $('#versionTitle').text(version.title);
                    $('#versionContent').text(version.content);
                    $('#versionAuthor').text(version.versionedByName);
                    
                    const date = new Date(version.versionDate);
                    if (!isNaN(date)) {
                        $('#versionDate').text(date.toLocaleString());
                    }
                    
                    $('#versionDetailsModal').modal('show');
                },
                error: function(xhr, status, error) {
                    console.error('Error details:', error);
                    toastr.error('Failed to load version details');
                }
            });
        }

        function restoreVersion() {
            if (!currentVersionId) return;

            if (confirm('Are you sure you want to restore this version? This will create a new version with this content.')) {
                $.ajax({
                    url: '/ArticleVersion/RestoreVersion',
                    type: 'POST',
                    data: { versionId: currentVersionId },
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to restore version');
                        }
                    },
                    error: function() {
                        toastr.error('An error occurred while restoring the version');
                    }
                });
            }
        }
    </script>
}

@model IEnumerable<ArticleViewModel>
@using Microsoft.AspNetCore.Mvc.TagHelpers
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link href="https://unpkg.com/flowbite@1.4.7/dist/flowbite.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet">
<script src="https://unpkg.com/flowbite@1.4.7/dist/flowbite.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>

@{
    ViewData["Title"] = "Articles";
}


<div class="py-2 px-0 bg-absolute flex items-center top-0 left-0 right-0 z-30">
    <ul class="flex items-center text-sm m-0">
        <li class="mr-2">
            <a href="#" class="text-2xl font-semibold mb-1 hover:text-gray-600 font-bold" style="color: #161571;">A R T I C L E S</a>
        </li>
    </ul>
    <ul class="ml-auto flex items-center">
        @await Html.PartialAsync("_Header")
    </ul>
</div>


<div class="flex flex-col h-full flex-grow min-h-[calc(100vh-85px)] mb-3">
    <div class="p-1 rounded-md col-span-3 flex-grow">
        <form action="" class="flex items-center mb-3">
            <div class="relative w-40 mr-2">
                <input type="text" class="py-2 pr-4 pl-10 bg-gray-50 w-full outline-none border border-gray-100 rounded-md text-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-500" placeholder="Search articles">
                <svg class="absolute top-1/2 left-4 -translate-y-1/2 text-gray-400 w-4 h-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
            </div>
            

            <!-- Add Filter Button and Dropdown -->
            <div class="relative mr-2">
                <button type="button" id="filterButton"
                        class="py-2 px-4 bg-gray-50 border border-gray-100 rounded-md text-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-500 hover:bg-gray-100 flex items-center">
                    <svg class="w-4 h-4 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z" />
                    </svg>
                    Filter
                </button>

                <div id="filterDropdown"
                     class="hidden absolute left-0 mt-2 w-64 bg-white rounded-md shadow-lg z-50 p-4">
                    <div class="mb-4">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Categories</label>
                        <div class="space-y-2">
                            <label class="flex items-center">
                                <input type="checkbox" name="categories" value="Bug" class="mr-2">
                                Bug
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" name="categories" value="Feature Request" class="mr-2">
                                Feature Request
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" name="categories" value="Support" class="mr-2">
                                Support
                            </label>
                        </div>
                    </div>


                    <div class="flex justify-between">
                        <button type="button" id="clearFilters" class="text-gray-600 text-sm hover:text-gray-800">
                            Clear Filters
                        </button>
                        <button type="button" id="applyFilters"
                                class="bg-blue-500 text-white px-4 py-2 rounded-md text-sm hover:bg-blue-600">
                            Apply Filters
                        </button>
                    </div>
                </div>
            </div>


            <div class="relative mr-2">
                <button type="button" id="createArticleBtn" data-toggle="modal" data-target="#createArticleModal"
                        class="py-2 px-4 bg-purple-400 text-white rounded-md text-sm hover:bg-purple-600 transition duration-300 ease-in-out flex items-center">
                    <svg class="w-4 h-4 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                    </svg>
                    Create Article
                </button>
            </div>
            
        </form>
        @*
        <div class="grid grid-cols-1 mb-0 border-none">
            <div class="p-0 rounded-md">

                <!-- Articles as cards -->
                <div class="grid grid-cols-1 gap-2 pr-4">
                    @foreach (var article in Model)
                    {
                        <article class="bg-white w-full p-4 rounded-md text-gray-900">
                            <!-- Card Header -->
                            <header class="flex items-center gap-2 mb-3">
                                <div class="w-5 h-5 rounded-full bg-black"></div>
                                <a class="text-purple-900 text-xs">
                                    @article.CreatedByName
                                </a>
                                <span class="text-gray-400 text-xs">• @article.CreatedOn.ToString("g")</span>
                                <button onclick="editArticle(@article.ArticleId)" class="text-blue-600 hover:text-blue-800 mr-2 ml-auto">
                                    <svg class="w-4 h-4 inline" xmlns="http://www.w3.org/2000/svg" fill="none"
                                        viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                    </svg>
                                </button>
                                <button onclick="deleteArticle(@article.ArticleId)" class="text-red-600 hover:text-red-800 text-gray-500 font-bold ml-2 cursor-pointer">
                                    <svg class="w-4 h-4 inline" xmlns="http://www.w3.org/2000/svg" fill="none"
                                        viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                    </svg>
                                </button>


                            </header>

                            <!-- Title -->
                            <h2 class="text-lg font-bold mb-3 leading-snug">
                                <a href="@Url.Action("Details", "Article", new { id = article.ArticleId })" class="text-gray-900 text-xs hover:underline">
                                    @article.Title
                                </a>
                            </h2>

                            <!-- Content -->
                            <p class="text-sm leading-relaxed mb-4">
                                <a href="@Url.Action("Details", "Article", new { id = article.ArticleId })" class="text-gray-900 text-xs hover:underline">
                                    @article.Content
                                </a>
                            </p>

                            
                        </article>
                    }
                </div>
            </div>
        </div>*@
        <div class="overflow-x-auto bg-white rounded-md shadow">
            <table class="table-auto w-full">
                <thead class="bg-gray-200">
                    <tr>
                        <th class="py-3 px-4 text-left text-sm font-medium text-gray-600 cursor-pointer w-1/2">
                            <div class="flex items-center">
                                TITLE
                                <span class="sort-icon ml-1">↕</span>
                            </div>
                        </th>
                        <th class="py-3 px-4 text-left text-sm font-medium text-gray-600 cursor-pointer w-32">
                            <div class="flex items-center">
                                CREATED ON
                                <span class="sort-icon ml-1">↕</span>
                            </div>
                        </th>
                        <th class="py-3 px-4 text-center text-sm font-medium text-gray-600 w-1/4">
                            ACTIONS
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var article in Model)
                    {
                        <tr class="hover:bg-gray-50 border-b">
                            <td class="py-2 px-4 text-sm text-gray-800 w-1/2">
                                <div class="flex items-center">
                                    <img src="https://placehold.co/32x32" 
                                         alt="Author" 
                                         class="w-8 h-8 rounded-full mr-3 object-cover" />
                                    <div class="flex flex-col">
                                        <span class="text-xs text-gray-500">@article.CreatedByName</span>
                                        <a href="@Url.Action("Details", "Article", new { id = article.ArticleId })" class="font-medium truncate hover:underline">
                                            @article.Title
                                        </a>
                                    </div>
                                </div>
                            </td>
                            <td class="py-2 px-4 text-sm text-gray-800 w-32">
                                <span class="text-xs text-gray-500">@article.CreatedOn.ToString("g")</span>
                            </td>
                            <td class="py-2 px-4 text-center w-1/4">
                                <button onclick="editArticle(@article.ArticleId)" class="text-blue-600 hover:text-blue-800 mr-2">
                                    <svg class="w-4 h-4 inline" xmlns="http://www.w3.org/2000/svg" fill="none"
                                     viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                    </svg>
                                </button>
                                <button onclick="deleteArticle(@article.ArticleId)" class="text-red-600 hover:text-red-800">
                                    <svg class="w-4 h-4 inline" xmlns="http://www.w3.org/2000/svg" fill="none"
                                     viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                    </svg>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="pagination flex items-center justify-between mt-2.5">
                <span class="text-sm align-center text-gray-700 ml-4">1-10 of 76 results</span>
                <div class="space-x-2">
                    <button id="prevPage" onclick="changePage(-1)"
                            class="px-3 py-2 mb-2.5 text-sm text-gray-600 bg-gray-100 hover:bg-gray-200 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-300">
                        Previous
                    </button>
                    <button id="nextPage" onclick="changePage(1)"
                            class="px-3 py-2 mb-2.5 mr-2 text-sm text-white hover:text-purple-600 bg-purple-400 hover:bg-purple-600 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-400">
                        Next
                    </button>
                </div>
            </div>
        </div>

    </div>
</div>



<!-- Create Article Modal -->
<div class="modal fade" id="createArticleModal" tabindex="-1">
    <div class="modal-dialog modal-lg max-w-md mx-auto">
        <div class="modal-content rounded-lg shadow-xl">
            <div class="modal-header text-center bg-gradient-to-r from-blue-100 to-purple-700 rounded-t-lg p-4 d-flex justify-content-center align-items-center position-relative">
                <h5 class="modal-title text-2xl font-bold text-center text-indigo-900">Create Article</h5>
                <button type="button" class="close position-absolute" data-dismiss="modal" style="top: 10px; right: 10px;">
                    <span>&times;</span>
                </button>
            </div>
            <form id="createArticleForm">
                <div class="modal-body p-6 space-y-4">
                    <div class="form-group">
                        <label for="Title" class="block text-sm font-medium text-indigo-700 mb-1">Title</label>
                        <input name="Title" id="Title" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" required style="box-shadow: 0 4px 8px rgba(126, 142, 241, 0.5), 0 0 15px rgba(126, 142, 241, 0.2); color: #161571;" />
                    </div>
                    <div class="form-group">
                        <label for="Content" class="block text-sm font-medium text-indigo-700 mb-1">Content</label>
                        <textarea name="Content" id="Content" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md h-32 focus:outline-none focus:ring-2 focus:ring-blue-400" rows="4" required style="box-shadow: 0 4px 8px rgba(126, 142, 241, 0.5), 0 0 15px rgba(126, 142, 241, 0.2); color: #161571;"></textarea>
                    </div>
                    <div class="form-group">
                        <label class="block text-sm font-medium text-indigo-700 mb-1">Attachments</label>
                        <div class="custom-file">
                            <input type="file" class="custom-file-input" id="attachmentInput" multiple>
                            <label class="custom-file-label text-indigo-900" for="attachmentInput">Choose files</label>
                        </div>
                        <div id="attachmentsList" class="mt-3 bg-indigo-900">
                            <!-- Pending attachments will be listed here -->
                        </div>
                    </div>
                </div>
                <div class="modal-footer p-6 pt-0 flex justify-end space-x-4 mt-3">
                    <button type="button" class="btn px-4 py-2 mt-3 text-gray-700 hover:bg-gray-100 rounded-md" style="text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn text-[#161571] mt-3 rounded-md hover:bg-[#BCC5FF]" style="background-color: #D1D7FF; padding: 5px 10px;">Create Article</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Create Article Modal -->
<div class="modal fade" id="createArticleModal" tabindex="-1">
    <div class="modal-dialog modal-lg max-w-md mx-auto">
        <div class="modal-content rounded-lg shadow-xl">
            <div class="modal-header text-center bg-gradient-to-r from-blue-100 to-purple-700 rounded-t-lg p-4 d-flex justify-content-center align-items-center position-relative">
                <h5 class="modal-title text-2xl font-bold text-center text-indigo-900">Create Article</h5>
                <button type="button" class="close position-absolute" data-dismiss="modal" style="top: 10px; right: 10px;">
                    <span>&times;</span>
                </button>
            </div>
            <form id="createArticleForm">
                <div class="modal-body p-6 space-y-4">
                    <div class="form-group">
                        <label for="Title" class="block text-sm font-medium text-indigo-700 mb-1">Title</label>
                        <input name="Title" id="Title" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" required style="box-shadow: 0 4px 8px rgba(126, 142, 241, 0.5), 0 0 15px rgba(126, 142, 241, 0.2); color: #161571;" />
                    </div>
                    <div class="form-group">
                        <label for="Content" class="block text-sm font-medium text-indigo-700 mb-1">Content</label>
                        <textarea name="Content" id="Content" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md h-32 focus:outline-none focus:ring-2 focus:ring-blue-400" rows="4" required style="box-shadow: 0 4px 8px rgba(126, 142, 241, 0.5), 0 0 15px rgba(126, 142, 241, 0.2); color: #161571;"></textarea>
                    </div>
                    <div class="form-group">
                        <label class="block text-sm font-medium text-indigo-700 mb-1">Attachments</label>
                        <div class="custom-file">
                            <input type="file" class="custom-file-input" id="attachmentInput" multiple>
                            <label class="custom-file-label text-indigo-900" for="attachmentInput">Choose files</label>
                        </div>
                        <div id="attachmentsList" class="mt-3 bg-indigo-900">
                            <!-- Pending attachments will be listed here -->
                        </div>
                    </div>
                </div>
                <div class="modal-footer p-6 pt-0 flex justify-end space-x-4 mt-3">
                    <button type="button" class="btn px-4 py-2 mt-3 text-gray-700 hover:bg-gray-100 rounded-md" style="text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn text-[#161571] mt-3 rounded-md hover:bg-[#BCC5FF]" style="background-color: #D1D7FF; padding: 5px 10px;">Create Article</button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    body {
        margin: 0;
        font-family: Arial, sans-serif;
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
        transition: background-color 0.4s ease;
    }
    .rating {
        display: flex;
        flex-direction: row-reverse;
        justify-content: flex-end;
    }

        .rating input {
            display: none;
        }

        .rating label {
            cursor: pointer;
            font-size: 30px;
            color: #ddd;
            padding: 5px;
        }

        .rating input:checked ~ label {
            color: #4B0082; /* Dark violet color */
        }

        .rating label:hover,
        .rating label:hover ~ label {
            color: #4B0082; /* Dark violet color */
        }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            let pendingAttachments = [];

            $('#attachmentInput').change(function(e) {
                const files = Array.from(e.target.files);
                pendingAttachments = pendingAttachments.concat(files);
                refreshPendingAttachments();
                $(this).val('');
            });

            function displayPendingAttachment(file, index) {
                const html = `
                    <div class="attachment-item d-flex text-indigo-900 justify-content-between align-items-center mb-2">
                        <span>${file.name}</span>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removePendingAttachment(${index})">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                `;
                $('#attachmentsList').append(html);
            }

            window.removePendingAttachment = function(index) {
                pendingAttachments.splice(index, 1);
                refreshPendingAttachments();
            };

            function refreshPendingAttachments() {
                $('#attachmentsList').empty();
                pendingAttachments.forEach((file, index) => {
                    displayPendingAttachment(file, index);
                });
            }

            $('#createArticleForm').submit(function(e) {
                e.preventDefault();
                const formData = new FormData();
                
                // Add form fields
                formData.append('Title', $('#Title').val());
                formData.append('Content', $('#Content').val());
                
                // Add attachments
                pendingAttachments.forEach(file => {
                    formData.append('attachments', file);
                });

                $.ajax({
                    url: '/Article/Create',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        if (response.success) {
                            $('#createArticleModal').modal('hide');
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to create article');
                        }
                    },
                    error: function() {
                        toastr.error('An error occurred while creating the article');
                    }
                });
            });

            function deleteArticle(id) {
                if (confirm('Are you sure you want to delete this article?')) {
                    $.ajax({
                        url: '/Article/Delete/' + id,
                        type: 'DELETE',
                        success: function(response) {
                            location.reload();
                        },
                        error: function() {
                            toastr.error('An error occurred while deleting the article');
                        }
                    });
                }
            }
        });
        
    </script>
    
}
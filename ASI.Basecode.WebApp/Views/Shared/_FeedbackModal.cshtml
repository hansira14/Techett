@model int

<div class="modal fade" id="feedbackModal" tabindex="-1">
    <div class="modal-dialog modal-lg max-w-md mx-auto">
        <div class="modal-content rounded-lg shadow-xl">
            <div class="modal-header text-center bg-gradient-to-r from-blue-100 to-purple-700 rounded-t-lg p-4 d-flex justify-content-center align-items-center position-relative">
                <h5 class="modal-title text-2xl font-bold text-center text-indigo-900">Provide Feedback</h5>
                <button type="button" class="close position-absolute" data-dismiss="modal" style="top: 10px; right: 10px;">
                    <span>&times;</span>
                </button>
            </div>
            <form id="feedbackForm">
                <div class="modal-body embed-responsive-16by9 space-y-4">
                    <input type="hidden" name="TicketId" value="@Model" />
                    <div class="form-group">
                        <label for="Rating" class="block text-sm font-medium text-indigo-700 mb-1">Rating</label>
                        <div class="star-rating">
                            <div class="stars">
                                <input type="radio" name="Rating" value="1" id="star1" class="hidden">
                                <label for="star1" data-rating="1">★</label>
                                
                                <input type="radio" name="Rating" value="2" id="star2" class="hidden">
                                <label for="star2" data-rating="2">★</label>
                                
                                <input type="radio" name="Rating" value="3" id="star3" class="hidden">
                                <label for="star3" data-rating="3">★</label>
                                
                                <input type="radio" name="Rating" value="4" id="star4" class="hidden">
                                <label for="star4" data-rating="4">★</label>
                                
                                <input type="radio" name="Rating" value="5" id="star5" class="hidden">
                                <label for="star5" data-rating="5">★</label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Remarks" class="block text-sm font-medium text-indigo-700 mb-1">Comments</label>
                        <textarea name="Remarks" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md h-32 focus:outline-none focus:ring-2 focus:ring-blue-400" rows="4" required style="box-shadow: 0 4px 8px rgba(126, 142, 241, 0.5), 0 0 15px rgba(126, 142, 241, 0.2); color: #161571;"></textarea>
                    </div>
                </div>
                <div class="modal-footer p-6 pt-0 flex justify-end space-x-4 mt-3 mb-0">
                    <button type="button" class="btn px-4 py-2 text-gray-700 mt-3 rounded-md focus:outline-none, focus:ring" style="padding: 5px 10px; text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn text-[#161571] rounded-md mt-3 hover:bg-[#BCC5FF]" style="background-color: #D1D7FF; padding: 5px 10px;">Submit Feedback</button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
.star-rating .stars {
    display: flex;
    flex-direction: row;
    gap: 4px;
}

.star-rating label {
    cursor: pointer;
    font-size: 30px;
    color: #ddd;
    transition: color 0.2s ease-in-out;
}

.star-rating input[type="radio"]:checked + label,
.star-rating label:hover {
    color: #ffd700;
}

/* Only highlight hovered star and previous stars */
.star-rating label:hover ~ label {
    color: #ddd;
}

/* Keep selected stars highlighted */
.star-rating input[type="radio"]:checked + label ~ label {
    color: #ddd;
}

.hidden {
    display: none;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const starLabels = document.querySelectorAll('.star-rating label');
    
    starLabels.forEach(label => {
        label.addEventListener('mouseover', function() {
            const rating = this.getAttribute('data-rating');
            highlightStars(rating);
        });
        
        label.addEventListener('mouseout', function() {
            const checkedInput = document.querySelector('.star-rating input:checked');
            if (checkedInput) {
                highlightStars(checkedInput.value);
            } else {
                resetStars();
            }
        });
    });
    
    function highlightStars(rating) {
        starLabels.forEach(label => {
            const labelRating = label.getAttribute('data-rating');
            label.style.color = labelRating <= rating ? '#ffd700' : '#ddd';
        });
    }
    
    function resetStars() {
        starLabels.forEach(label => {
            label.style.color = '#ddd';
        });
    }
});
</script> 
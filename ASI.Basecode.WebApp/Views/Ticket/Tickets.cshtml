@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<ASI.Basecode.Services.ServiceModels.TicketViewModel>
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link href="https://unpkg.com/flowbite@1.4.7/dist/flowbite.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet">
<script src="https://unpkg.com/flowbite@1.4.7/dist/flowbite.js"></script>

@{
    ViewData["Title"] = "Tickets";
}
<div class="py-2 px-0 bg-absolute flex items-center sticky top-0 left-0 right-0 z-30">
    <ul class="flex items-center text-sm m-0">
        <li class="mr-2">
            <a href="#" class="text-2xl font-semibold mb-1 hover:text-gray-600 font-bold" style="color: #161571;">T I C K E T S</a>
        </li>
    </ul>
    <ul class="ml-auto flex items-center">
        <li type="button" class="dropdown-toggle text-gray-400 w-8 h-8 rounded flex items-center justify-center hover:bg-gray-50 hover:text-gray-600 mr-4">
            <i class="ri-notification-3-line"></i>
        </li>
        <div class="dropdown-menu shadow-md shadow-black/5 z-30 max-w-xs w-full bg-white rounded-md border border-gray-100">
            <div class="flex items-center px-4 pt-4 border-b border-b-gray-100 notification-tab">
                <button type="button" data-tab="notification" data-tab-page="notifications" class="text-gray-400 font-medium text-[13px] hover:text-gray-600 border-b-2 border-b-transparent mr-4 pb-1 active">Notifications</button>
            </div>
            <div class="my-2">
                <ul class="max-h-64 overflow-y-auto" data-tab-for="notification" data-page="notifications">
                    <li>
                        <a href="#" class="py-2 px-4 flex items-center hover:bg-gray-50 group">
                            <img src="https://placehold.co/32x32" alt="" class="w-8 h-8 rounded block object-cover align-middle">
                            <div class="ml-2">
                                <div class="text-[13px] text-gray-600 font-medium truncate group-hover:text-blue-500">New issue</div>
                                <div class="text-[11px] text-gray-400">from a user</div>
                            </div>
                        </a>
                        <a href="#" class="py-2 px-4 flex items-center hover:bg-gray-50 group">
                            <img src="https://placehold.co/32x32" alt="" class="w-8 h-8 rounded block object-cover align-middle">
                            <div class="ml-2">
                                <div class="text-[13px] text-gray-600 font-medium truncate group-hover:text-blue-500">New issue</div>
                                <div class="text-[11px] text-gray-400">from a user</div>
                            </div>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
        <!-- Profile Section -->
        <div class="flex items-center">
            <!-- User Name and Settings -->
            <div class="text-left mr-1">
                <div class="text-gray-800 font-regular text-xs">admin admin</div>
            </div>

            <!-- Profile Picture -->
            <img src="https://placehold.co/32x32" alt="Profile" class="w-10 h-10 rounded-md object-cover" />
        </div>
    </ul>
</div>

<div class="grid grid-cols-1 gap-6 pb-6 h-screen w-full overflow-hidden">
    <div class="bg-white h-full border border-gray-100 shadow-md shadow-black/5 p-6 rounded-md col-span-2">

        <div class="flex justify-between mb-6">
            <div>
                <div class="text-sm font-medium text-gray-400">ALL ABOUT US</div>
            </div>
        </div>

        <div class="container mt-4">
            <h2>Tickets</h2>
            <button type="button" class="btn btn-primary mb-3" data-toggle="modal" data-target="#createTicketModal">
                Create New Ticket
            </button>

            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Category</th>
                        <th>Priority</th>
                        <th>Status</th>
                        <th>Created On</th>
                        <th>Assigned To</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ticket in Model)
                    {
                        <tr>
                            <td>@ticket.Title</td>
                            <td>@ticket.Category</td>
                            <td>@ticket.Priority</td>
                            <td>@ticket.Status</td>
                            <td>@ticket.CreatedOn.ToString("g")</td>
                            <td>@(ticket.AssignedToName ?? "Unassigned")</td>
                            <td>
                                <a asp-action="Details" asp-route-id="@ticket.TicketId" class="btn btn-info btn-sm">View</a>
                                <button class="btn btn-warning btn-sm" onclick="editTicket(@ticket.TicketId)">Edit</button>
                                <button class="btn btn-danger btn-sm" onclick="deleteTicket(@ticket.TicketId)">Delete</button>
                                <button class="btn btn-primary btn-sm" onclick="showAssignModal(@ticket.TicketId)">Assign</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div>
            <canvas id="order-chart"></canvas>
        </div>
    </div>
</div>

<!-- Create Ticket Modal -->
<div class="modal fade" id="createTicketModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Ticket</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <form id="createTicketForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="Title">Title</label>
                        <input name="Title" id="Title" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label for="Content">Description</label>
                        <textarea name="Content" id="Content" class="form-control" rows="4" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="Category">Category</label>
                        <select name="Category" id="Category" class="form-control" required>
                            <option value="Bug">Bug</option>
                            <option value="Feature">Feature Request</option>
                            <option value="Support">Support</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="Priority">Priority</label>
                        <select name="Priority" id="Priority" class="form-control" required>
                            <option value="1">Low</option>
                            <option value="2">Medium</option>
                            <option value="3">High</option>
                            <option value="4">Critical</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Attachments</label>
                        <input type="file" id="attachmentInput" class="form-control-file" multiple />
                        <div id="attachmentsList" class="mt-2"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Create Ticket</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Assign Ticket Modal -->
<div class="modal fade" id="assignTicketModal" tabindex="-1" role="dialog" aria-labelledby="assignTicketModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Assign Ticket</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <form id="assignTicketForm">
                <input type="hidden" id="ticketId" name="TicketId" />
                <div class="modal-body">
                    <div class="form-group">
                        <label for="AssignedTo">Assign To</label>
                        <select name="AssignedTo" id="AssignedTo" class="form-control" required>
                            <!-- Options will be populated dynamically -->
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" onclick="removeAssignment()">Remove Assignment</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Assign</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            if (typeof $().modal === 'undefined') {
                console.error('Bootstrap modal is not loaded');
            } else {
                console.log('Bootstrap modal is loaded correctly');
            }

            let pendingAttachments = [];

            $('#attachmentInput').change(function(e) {
                const files = e.target.files;
                for (let i = 0; i < files.length; i++) {
                    pendingAttachments.push(files[i]);
                    displayPendingAttachment(files[i], pendingAttachments.length - 1);
                }
                $(this).val('');
            });

            function displayPendingAttachment(file, index) {
                const html = `
                    <div class="attachment-item d-flex justify-content-between align-items-center mb-2">
                        <span>${file.name}</span>
                        <button type="button" class="btn btn-danger btn-sm" onclick="window.removePendingAttachment(${index})">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                `;
                $('#attachmentsList').append(html);
            }

            window.removePendingAttachment = function(index) {
                pendingAttachments.splice(index, 1);
                refreshPendingAttachments();
            };

            function refreshPendingAttachments() {
                $('#attachmentsList').empty();
                pendingAttachments.forEach((file, index) => {
                    displayPendingAttachment(file, index);
                });
            }

            $('#createTicketForm').submit(function(e) {
                e.preventDefault();
                const formData = new FormData(this);
                
                // Add each pending attachment to the form data
                pendingAttachments.forEach(file => {
                    formData.append('attachments', file);
                });

                $.ajax({
                    url: '/Ticket/CreateTicket',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        if (response.success) {
                            $('#createTicketModal').modal('hide');
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to create ticket');
                        }
                    },
                    error: function() {
                        toastr.error('An error occurred while creating the ticket');
                    }
                });
            });

            window.showAssignModal = function(ticketId) {
                $('#ticketId').val(ticketId);
                
                // Load agents
                $.get('/Assignment/GetAgents', function(agents) {
                    var select = $('#AssignedTo');
                    select.empty();
                    agents.forEach(function(agent) {
                        select.append($('<option></option>')
                            .val(agent.userId)
                            .text(agent.fname + ' ' + agent.lname));
                    });
                    
                    $('#assignTicketModal').modal('show');
                }).fail(function(error) {
                    toastr.error('Failed to load agents');
                });
            };
        });

        function deleteTicket(id) {
            if (confirm('Are you sure you want to delete this ticket?')) {
                $.ajax({
                    url: '/Ticket/DeleteTicket',
                    type: 'POST',
                    data: { id: id },
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to delete ticket');
                        }
                    },
                    error: function() {
                        toastr.error('An error occurred while deleting the ticket');
                    }
                });
            }
        }

        function editTicket(id) {
            window.location.href = '/Ticket/Details/' + id;
        }

        $('#assignTicketForm').submit(function(e) {
            e.preventDefault();
            $.ajax({
                url: '/Assignment/AssignTicket',
                type: 'POST',
                data: $(this).serialize(),
                success: function(response) {
                    if (response.success) {
                        $('#assignTicketModal').modal('hide');
                        location.reload();
                    } else {
                        toastr.error(response.message || 'Failed to assign ticket');
                    }
                },
                error: function() {
                    toastr.error('An error occurred while assigning the ticket');
                }
            });
        });

        function removeAssignment() {
            var ticketId = $('#ticketId').val();
            if (confirm('Are you sure you want to remove the current assignment?')) {
                $.ajax({
                    url: '/Assignment/RemoveAssignment',
                    type: 'POST',
                    data: { ticketId: ticketId },
                    success: function(response) {
                        if (response.success) {
                            $('#assignTicketModal').modal('hide');
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to remove assignment');
                        }
                    },
                    error: function() {
                        toastr.error('An error occurred while removing the assignment');
                    }
                });
            }
        }
    </script>
}

<style>
    body {
        margin: 0;
        font-family: Arial, sans-serif;
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
        transition: background-color 0.4s ease;
    }
</style>

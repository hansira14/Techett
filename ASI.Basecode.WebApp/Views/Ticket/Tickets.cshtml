@using Microsoft.AspNetCore.Mvc.TagHelpers
@model PaginatedTicketsViewModel
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link href="https://unpkg.com/flowbite@1.4.7/dist/flowbite.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet">
<script src="https://unpkg.com/flowbite@1.4.7/dist/flowbite.js"></script>

@{
    ViewData["Title"] = "Tickets";
}


<div class="py-2 px-0 bg-absolute flex items-center left-0 right-0 z-30">
    <ul class="flex items-center text-sm m-0">
        <li class="mr-2">
            <a href="#" class="text-2xl font-semibold mb-1 hover:text-gray-600 font-bold" style="color: #161571;">T I C K E T S</a>
        </li>
    </ul>
    <ul class="ml-auto flex items-center">
        <div class="relative">
            <div class="notification">
                <button alt="notification" class="notifs hover-pointer dropdown-toggle text-gray-400 w-8 h-8 rounded flex items-center justify-center hover:bg-gray-50 hover:text-gray-600 mr-4">
                    <i class="ri-notification-3-line"></i>
                </button>
            </div>
            <div class="dropdown">
                <div class="container py-4 max-h-140 overflow-y-auto bg-white shadow-lg rounded-lg absolute right-0 mt-2">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="mb-0">Earlier</h5>
                        <a href="#" class="text-primary text-decoration-none">See all</a>
                    </div>

                    <div class="list-group">
                        <!-- Friend Request Acceptance -->
                        <div class="list-group-item border-0 d-flex align-items-center gap-3">
                            <div class="position-relative">
                                <img src="/placeholder.svg?height=40&width=40" class="rounded-circle" width="40" height="40" alt="Profile picture">
                                <div class="position-absolute bottom-0 end-0 bg-primary rounded-circle p-1">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="white" viewBox="0 0 16 16">
                                        <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z" />
                                    </svg>
                                </div>
                            </div>
                            <div class="flex-grow-1">
                                <p class="mb-0"><strong>Jid Cotejo</strong> accepted your friend request.</p>
                                <small class="text-muted">12h</small>
                            </div>
                        </div>

                        <!-- Education Update -->
                        <div class="list-group-item border-0 d-flex align-items-center gap-3">
                            <div class="position-relative">
                                <img src="/placeholder.svg?height=40&width=40" class="rounded-circle" width="40" height="40" alt="Profile picture">
                                <div class="position-absolute bottom-0 end-0 bg-primary rounded-circle p-1">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="white" viewBox="0 0 16 16">
                                        <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z" />
                                    </svg>
                                </div>
                            </div>
                            <div class="flex-grow-1">
                                <p class="mb-0"><strong>Andr Erasmo</strong> is at <strong>Cebu Institute of Technology - University</strong> with <strong>Justine Jam Cotejo</strong></p>
                                <div class="d-flex align-items-center gap-2">
                                    <small class="text-muted">13h</small>
                                    <small class="text-muted">42 reactions</small>
                                    <small class="text-muted">1 comment</small>
                                </div>
                            </div>
                            <div class="text-primary"></div>
                        </div>

                        <!-- Story Views -->
                        <div class="list-group-item border-0 d-flex align-items-center gap-3">
                            <div class="position-relative">
                                <img src="/placeholder.svg?height=40&width=40" class="rounded" width="40" height="40" alt="Story thumbnail">
                            </div>
                            <div class="flex-grow-1">
                                <p class="mb-0">Your last story got 415 views before it expired. You can create a new story.</p>
                                <small class="text-muted">2d</small>
                            </div>
                        </div>

                        <!-- Featured List -->
                        <div class="list-group-item border-0 d-flex align-items-center gap-3">
                            <div class="position-relative">
                                <img src="/placeholder.svg?height=40&width=40" class="rounded-circle" width="40" height="40" alt="Profile picture">
                            </div>
                            <div class="flex-grow-1">
                                <p class="mb-0">You're featured on <strong>Dennis E. Albiso</strong>'s public weekly engagement list.</p>
                                <small class="text-muted">3d</small>
                            </div>
                            <div class="text-primary"></div>
                        </div>
                    </div>

                    <button class="btn btn-light w-100 mt-3">See previous notifications</button>
                </div>
            </div>
        </div>
        <!-- Profile Section -->
        <div class="flex items-center">
            <div class="text-left mr-1">
                <div class="text-gray-800 font-regular text-xs">@HttpContextAccessor.HttpContext.Session.GetString("UserName")</div>
            </div>
            <img src="https://placehold.co/32x32" alt="Profile" class="w-10 h-10 rounded-md object-cover" />
        </div>
    </ul>
</div>

<div class="flex flex-col h-full flex-grow min-h-[calc(100vh-85px)] mb-3">
    <div class="p-1 rounded-md col-span-3 flex-grow">
        <form id="searchForm" class="flex items-center mb-3">
            <div class="relative w-40 mr-2">
                <input type="text" 
                       id="searchInput" 
                       name="searchTerm" 
                       class="py-2 pr-4 pl-10 bg-gray-50 w-full outline-none border border-gray-100 rounded-md text-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-500" 
                       placeholder="Search tickets">
                <svg class="absolute top-1/2 left-4 -translate-y-1/2 text-gray-400 w-4 h-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
            </div>
            <input type="hidden" id="currentPage" name="page" value="1">
            <input type="hidden" id="pageSize" name="pageSize" value="12">
        </form>

        <div class="overflow-x-auto bg-white rounded-md shadow">
            <table class="table-auto w-full">

                <thead class="bg-gray-200">
                    <tr>
                        <th></th>
                        <th class="py-3 px-4 text-left text-sm font-medium text-gray-600">TITLE</th>
                        <th class="py-3 px-4 text-left text-sm font-medium text-gray-600">CONTENT</th>
                        <th class="py-3 px-4 text-left text-sm font-medium text-gray-600">STATUS</th>
                        <th class="py-3 px-4 text-left text-sm font-medium text-gray-600">CATEGORY</th>
                        <th class="py-3 px-4 text-left text-sm font-medium text-gray-600">PRIORITY</th>
                        <th class="py-3 px-4 text-left text-sm font-medium text-gray-600">ASSIGNED</th>
                        <th class="py-3 px-4 text-center text-sm font-medium text-gray-600">ACTIONS</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ticket in Model.Tickets)
                    {

                        <tr class="hover:bg-gray-50 border-b">
                            <td class="py-2 px-3 text-sm">
                                <input type="checkbox" id="ticket-@ticket.TicketId" class="checkbox">
                            </td>
                            <td class="py-2 px-4 text-sm text-gray-800" style="max-width: 150px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="@ticket.Title">
                                @ticket.Title
                            </td>
                            <td class="py-2 px-4 text-sm text-gray-800" style="max-width: 300px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="@ticket.Content">
                                @ticket.Content
                            </td>
                            <td class="py-2 px-4 text-sm text-gray-800">
                                <span class="px-2 py-1 rounded-full text-white text-xs font-medium
                                    @(ticket.Status == "Resolved" ? "bg-green-400" :
                                      ticket.Status == "Unconfirmed" ? "bg-yellow-400" :
                                      ticket.Status == "In Progress" ? "bg-blue-400" : "bg-purple-400")">
                                        @ticket.Status
                                </span>
                            </td>


                            <td class="py-2 px-4 text-sm text-gray-800 truncate max-w-[120px]">
                                @ticket.Category
                            </td>
                            <td class="py-2 px-4 text-sm text-gray-800 truncate max-w-[120px]">
                                @ticket.Priority
                            </td>
                            <td class="py-2 px-4 text-sm text-gray-800 truncate max-w-[150px]">
                                @(ticket.AssignedToName ?? "Unassigned")
                            </td>
                            <td class="py-2 px-4 text-center truncate max-w-[100px]">
                                <button onclick="showAssignModal(@ticket.TicketId)" class="text-blue-600 hover:text-blue-800 mr-2">
                                    <svg class="w-4 h-4 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z" />
                                    </svg>
                                </button>
                                <a asp-action="Details" asp-route-id="@ticket.TicketId" class="text-green-600 hover:text-green-800 mr-2">
                                    <svg class="w-4 h-4 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                </a>
                                <button onclick="editTicketModal(@ticket.TicketId)" class="text-orange-600 hover:text-orange-800 mr-2">
                                    <svg class="w-4 h-4 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                    </svg>
                                </button>
                                <button onclick="deleteTicket(@ticket.TicketId)" class="text-red-600 hover:text-red-800">
                                    <svg class="w-4 h-4 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                    </svg>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="pagination flex items-center justify-between mt-2.5">
                <span class="text-sm align-center text-gray-700 ml-4">1-10 of 76 results</span>
                <div class="space-x-2">
                    <button id="prevPage" onclick="changePage(-1)" class="px-3 py-2 mb-2.5 text-sm text-gray-600 bg-gray-100 hover:bg-gray-200 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-300">Previous</button>
                    <button id="nextPage" onclick="changePage(1)" class="px-3 py-2 mb-2.5 mr-2 text-sm text-white hover:text-purple-600 bg-purple-400 hover:bg-purple-600 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-400">
                        Next
                    </button>

                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Ticket Modal -->
<div class="modal fade" id="createTicketModal" tabindex="-1">
    <div class="modal-dialog modal-lg max-w-md mx-auto">
        <div class="modal-content rounded-lg shadow-xl">
            <div class="modal-header text-center bg-gradient-to-r from-blue-100 to-purple-700 rounded-t-lg p-4 d-flex justify-content-center align-items-center position-relative">
                <h5 class="modal-title text-2xl font-bold text-center text-indigo-900">Create Ticket</h5>
                <button type="button" class="close position-absolute" data-dismiss="modal" style="top: 10px; right: 10px;">
                    <span>&times;</span>
                </button>
            </div>
            <form id="createTicketForm">
                <div class="modal-body p-6 space-y-4">
                    <div class="form-group">
                        <label for="Title" class="block text-sm font-medium text-indigo-700 mb-1">Ticket Name</label>
                        <input name="Title" id="Title" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" required style="box-shadow: 0 4px 8px rgba(126, 142, 241, 0.5), 0 0 15px rgba(126, 142, 241, 0.2); color: #161571;" />
                    </div>
                    <div class="form-group">
                        <label for="Content" class="block text-sm font-medium text-indigo-700 mb-1">Description</label>
                        <textarea name="Content" id="Content" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md h-32 focus:outline-none focus:ring-2 focus:ring-blue-400" rows="4" required style="box-shadow: 0 4px 8px rgba(126, 142, 241, 0.5), 0 0 15px rgba(126, 142, 241, 0.2); color: #161571;"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="Category" class="block text-sm font-medium text-indigo-700 mb-1">Category</label>
                        <select name="Category" id="Category" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" required style="box-shadow: 0 4px 8px rgba(126, 142, 241, 0.5), 0 0 15px rgba(126, 142, 241, 0.2); color: #161571;">
                            <option value="Bug">Bug</option>
                            <option value="Feature">Feature Request</option>
                            <option value="Support">Support</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="Priority" class="block text-sm font-medium text-indigo-700 mb-1">Priority</label>
                        <select name="Priority" id="Priority" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" required style="box-shadow: 0 4px 8px rgba(126, 142, 241, 0.5), 0 0 15px rgba(126, 142, 241, 0.2); color: #161571;">
                            <option value="1">Low</option>
                            <option value="2">Medium</option>
                            <option value="3">High</option>
                            <option value="4">Critical</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="block text-sm font-medium text-indigo-700 mb-1">Attachments</label>
                        <div class="flex items-center space-x-4">
                            <label for="attachmentInput" class="px-4 py-2 bg-indigo-900 text-white rounded-md hover:bg-indigo-800 focus:outline-none focus:ring-2 focus:ring-indigo-500 cursor-pointer">
                                Choose Files
                            </label>
                            <span class="text-sm text-indigo-900" id="fileChosen">No file chosen</span>
                        </div>
                        <input type="file" id="attachmentInput" class="hidden" multiple />
                        <div id="attachmentsList" class="mt-2"></div>
                    </div>
                </div>
                <div class="modal-footer p-6 pt-0 flex justify-end space-x-4 mt-3 mb-0">
                    <button type="button" class="btn px-4 py-2 text-gray-700 mt-3 rounded-md focus:outline-none, focus:ring" style="padding: 5px 10px; text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn text-[#161571] rounded-md mt-3 hover:bg-[#BCC5FF]" style="background-color: #D1D7FF; padding: 5px 10px;">Create Ticket</button>
                </div>




            </form>
        </div>
    </div>
</div>

<!-- Edit Ticket Modal -->
<div class="modal fade" id="editTicketModal" tabindex="-1" role="dialog" aria-labelledby="editTicketModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Ticket</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <form id="editTicketForm">
                <input type="hidden" id="TicketId" name="TicketId" />
                <div class="modal-body">
                    <div class="form-group">
                        <label for="Title">Title</label>
                        <input name="Title" id="Title" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label for="Content">Description</label>
                        <textarea name="Content" id="Content" class="form-control" rows="4" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="Category">Category</label>
                        <select name="Category" id="Category" class="form-control" required>
                            <option value="Bug">Bug</option>
                            <option value="Feature">Feature Request</option>
                            <option value="Support">Support</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="Priority">Priority</label>
                        <select name="Priority" id="Priority" class="form-control" required>
                            <option value="1">Low</option>
                            <option value="2">Medium</option>
                            <option value="3">High</option>
                            <option value="4">Critical</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Attachments</label>
                        <input type="file" id="attachmentInput" class="form-control-file" multiple />
                        <div id="attachmentsList" class="mt-2"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Assign Ticket Modal -->
<div class="modal fade" id="assignTicketModal" tabindex="-1" role="dialog" aria-labelledby="assignTicketModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg max-w-md mx-auto">
        <div class="modal-content rounded-lg shadow-xl">
            <div class="modal-header text-center bg-gradient-to-r from-blue-100 to-purple-700 rounded-t-lg p-4 d-flex justify-content-center align-items-center position-relative">
                <h5 class="modal-title text-2xl font-bold text-center text-indigo-900">Assign Ticket</h5>
                <button type="button" class="close position-absolute" data-dismiss="modal" style="top: 10px; right: 10px;">
                    <span>&times;</span>
                </button>
            </div>
            <form id="assignTicketForm">
                <input type="hidden" id="ticketId" name="TicketId" />
                <div class="modal-body p-6 space-y-4">
                    <div class="form-group">
                        <label for="AssignedTo" class="block text-sm font-medium text-indigo-700 mb-1">Assign To</label>
                        <select name="AssignedTo" id="AssignedTo" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" required style="box-shadow: 0 4px 8px rgba(126, 142, 241, 0.5), 0 0 15px rgba(126, 142, 241, 0.2); color: #161571;">
                            <!-- Options will be populated dynamically -->
                        </select>
                    </div>
                </div>
                <div class="modal-footer p-6 pt-0 flex justify-end space-x-4 mt-3">
                    <button type="button" class="btn px-4 py-2 mt-3 text-gray-700 hover:bg-gray-100 rounded-md" style="text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);" data-dismiss="modal">Close</button>
                    <button type="button" class="btn text-green mt-3 rounded-md hover:bg-green" style="background-color: #98A6FB; padding: 5px 10px;" onclick="removeAssignment()">Remove Assignment</button>
                  
                    <button type="submit" class="btn text-[#161571] mt-3 rounded-md hover:bg-[#BCC5FF]" style="background-color: #D1D7FF; padding: 5px 10px;">Assign</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.querySelector('.dropdown-toggle').addEventListener('click', function () {
        const dropdownMenu = this.nextElementSibling;
        dropdownMenu.classList.toggle('hidden');
    });

</script>
<style>
    body {
        margin: 0;
        font-family: Arial, sans-serif;
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
        transition: background-color 0.4s ease;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function () {
            if (typeof $().modal === 'undefined') {
                console.error('Bootstrap modal is not loaded');
            } else {
                console.log('Bootstrap modal is loaded correctly');
            }

            let pendingAttachments = [];

            $('#attachmentInput').change(function (e) {
                const files = e.target.files;
                for (let i = 0; i < files.length; i++) {
                    pendingAttachments.push(files[i]);
                    displayPendingAttachment(files[i], pendingAttachments.length - 1);
                }
                $(this).val('');
            });

            function displayPendingAttachment(file, index) {
                const html = `
                            <div class="attachment-item d-flex text-indigo-900 justify-content-between align-items-center mb-2">
                                <span>${file.name}</span>
                                <button type="button" class="btn btn-danger btn-sm" onclick="window.removePendingAttachment(${index})">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        `;
                $('#attachmentsList').append(html);
            }

            window.removePendingAttachment = function (index) {
                pendingAttachments.splice(index, 1);
                refreshPendingAttachments();
            };

            function refreshPendingAttachments() {
                $('#attachmentsList').empty();
                pendingAttachments.forEach((file, index) => {
                    displayPendingAttachment(file, index);
                });
            }

            $('#createTicketForm').submit(function (e) {
                e.preventDefault();
                const formData = new FormData(this);

                // Add each pending attachment to the form data
                pendingAttachments.forEach(file => {
                    formData.append('attachments', file);
                });

                $.ajax({
                    url: '/Ticket/CreateTicket',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            $('#createTicketModal').modal('hide');
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to create ticket');
                        }
                    },
                    error: function () {
                        toastr.error('An error occurred while creating the ticket');
                    }
                });
            });

            window.showAssignModal = function (ticketId) {
                $('#ticketId').val(ticketId);

                // Load agents
                $.get('/Assignment/GetAgents', function (agents) {
                    var select = $('#AssignedTo');
                    select.empty();
                    agents.forEach(function (agent) {
                        select.append($('<option></option>')
                            .val(agent.userId)
                            .text(agent.fname + ' ' + agent.lname));
                    });

                    $('#assignTicketModal').modal('show');
                }).fail(function (error) {
                    toastr.error('Failed to load agents');
                });
            };
        });

        function deleteTicket(id) {
            if (confirm('Are you sure you want to delete this ticket?')) {
                $.ajax({
                    url: '/Ticket/DeleteTicket',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to delete ticket');
                        }
                    },
                    error: function () {
                        toastr.error('An error occurred while deleting the ticket');
                    }
                });
            }
        }
        
        function editTicket(id) {
            window.location.href = '/Ticket/Details/' + id;
        }
        

        $('#assignTicketForm').submit(function (e) {
            e.preventDefault();
            $.ajax({
                url: '/Assignment/AssignTicket',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        $('#assignTicketModal').modal('hide');
                        location.reload();
                    } else {
                        toastr.error(response.message || 'Failed to assign ticket');
                    }
                },
                error: function () {
                    toastr.error('An error occurred while assigning the ticket');
                }
            });
        });

        function removeAssignment() {
            var ticketId = $('#ticketId').val();
            if (confirm('Are you sure you want to remove the current assignment?')) {
                $.ajax({
                    url: '/Assignment/RemoveAssignment',
                    type: 'POST',
                    data: { ticketId: ticketId },
                    success: function (response) {
                        if (response.success) {
                            $('#assignTicketModal').modal('hide');
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to remove assignment');
                        }
                    },
                    error: function () {
                        toastr.error('An error occurred while removing the assignment');
                    }
                });
            }
        }  
    </script>
    <!--Pagination-->
    <script>
        $(document).ready(function () {
            let searchTimeout;

            // Prevent form submission
            $('#searchForm').submit(function(e) {
                e.preventDefault();
            });

            // Handle search input
            $('#searchInput').on('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(function() {
                    $('#currentPage').val(1); // Reset to first page on new search
                    loadTickets();
                }, 500); // Debounce search for 500ms
            });

            // Handle pagination clicks
            $('#prevPage, #nextPage').click(function(e) {
                e.preventDefault();
                const direction = $(this).attr('id') === 'prevPage' ? -1 : 1;
                const currentPage = parseInt($('#currentPage').val());
                $('#currentPage').val(currentPage + direction);
                loadTickets();
            });

            function loadTickets() {
                const searchData = {
                    searchTerm: $('#searchInput').val(),
                    page: $('#currentPage').val(),
                    pageSize: $('#pageSize').val()
                };

                $.get('/Ticket/SearchTickets', searchData)
                    .done(function(response) {
                        updateTable(response);
                        updatePagination(response);
                    })
                    .fail(function() {
                        toastr.error('Failed to load tickets');
                    });
            }

            function updateTable(data) {
                const tbody = $('table tbody');
                tbody.empty();
                
                data.tickets.forEach(ticket => {
                    const row = createTicketRow(ticket);
                    tbody.append(row);
                });
            }

            function updatePagination(data) {
                const startItem = ((data.currentPage - 1) * data.pageSize) + 1;
                const endItem = Math.min(data.currentPage * data.pageSize, data.totalTickets);
                const totalPages = Math.ceil(data.totalTickets / data.pageSize);
                
                // Update the results text
                $('.pagination span').text(
                    data.totalTickets > 0 
                        ? `${startItem}-${endItem} of ${data.totalTickets} results`
                        : 'No results found'
                );

                // Disable/enable pagination buttons
                $('#prevPage').prop('disabled', data.currentPage === 1);
                $('#nextPage').prop('disabled', endItem >= data.totalTickets);

                // Optionally hide pagination if no results
                if (data.totalTickets === 0) {
                    $('.pagination').hide();
                } else {
                    $('.pagination').show();
                }
            }

            function createTicketRow(ticket) {
                return `
                    <tr class="hover:bg-gray-50 border-b">
                        <td class="py-2 px-3 text-sm">
                            <input type="checkbox" id="ticket-${ticket.ticketId}" class="checkbox">
                        </td>
                        <td class="py-2 px-4 text-sm text-gray-800" title="${ticket.title}">
                            ${ticket.title}
                        </td>
                        <td class="py-2 px-4 text-sm text-gray-800" title="${ticket.content}">
                            ${ticket.content}
                        </td>
                        <td class="py-2 px-4 text-sm text-gray-800">
                            <span class="px-2 py-1 rounded-full text-white text-xs font-medium ${getStatusClass(ticket.status)}">
                                ${ticket.status}
                            </span>
                        </td>
                        <td class="py-2 px-4 text-sm text-gray-800">${ticket.category}</td>
                        <td class="py-2 px-4 text-sm text-gray-800">${ticket.priority}</td>
                        <td class="py-2 px-4 text-sm text-gray-800">${ticket.assignedToName || 'Unassigned'}</td>
                        <td class="py-2 px-4 text-center truncate max-w-[100px]">
                            <button onclick="showAssignModal(${ticket.ticketId})" class="text-blue-600 hover:text-blue-800 mr-2">
                                <svg class="w-4 h-4 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z" />
                                </svg>
                            </button>
                            <a href="/Ticket/Details?id=${ticket.ticketId}" class="text-green-600 hover:text-green-800 mr-2">
                                <svg class="w-4 h-4 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                            </a>
                            <button onclick="editTicketModal(${ticket.ticketId})" class="text-orange-600 hover:text-orange-800 mr-2">
                                <svg class="w-4 h-4 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                </svg>
                            </button>
                            <button onclick="deleteTicket(${ticket.ticketId})" class="text-red-600 hover:text-red-800">
                                <svg class="w-4 h-4 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                </svg>
                            </button>
                        </td>
                    </tr>
                `;
            }

            function getStatusClass(status) {
                const statusClasses = {
                    'Resolved': 'bg-green-400',
                    'Unconfirmed': 'bg-yellow-400',
                    'In Progress': 'bg-blue-400',
                    'default': 'bg-purple-400'
                };
                return statusClasses[status] || statusClasses.default;
            }

            // Initial load
            loadTickets();
        });
    </script>
}

    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
            transition: background-color 0.4s ease;
        }

        .dropdown .container {
            width: 300px;
            max-height: 400px;
            overflow-y: auto;
        }
        
        .table-column {
            width: 15%; 
        }

        .title-column {
            word-wrap: break-word; 
            overflow: hidden; 
            text-overflow: ellipsis; 
            max-width: 120px; 
        }

        .table-cell {
            word-wrap: break-word;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        td {
            max-width: 150px; 
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap; 
        }

        .checkbox {
            outline: none;
            border-color: #D1D7FF; 
            appearance: none; 
            width: 10px; 
            height: 10px; 
            cursor: pointer; 
        }

    </style>
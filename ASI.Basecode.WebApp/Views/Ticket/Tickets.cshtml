@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<ASI.Basecode.Services.ServiceModels.TicketViewModel>
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link href="https://unpkg.com/flowbite@1.4.7/dist/flowbite.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet">
<script src="https://unpkg.com/flowbite@1.4.7/dist/flowbite.js"></script>

@{
    ViewData["Title"] = "Tickets";
}
<div class="py-2 px-0 bg-absolute flex items-center sticky top-0 left-0 right-0 z-30">
    <ul class="flex items-center text-sm m-0">
        <li class="mr-2">
            <a href="#" class="text-2xl font-semibold mb-1 hover:text-gray-600 font-bold" style="color: #161571;">T I C K E T S</a>
        </li>
    </ul>
    <ul class="ml-auto flex items-center">
        <div class="relative">
            <div class="notification">
                <button alt="notification" class="notifs hover-pointer dropdown-toggle text-gray-400 w-8 h-8 rounded flex items-center justify-center hover:bg-gray-50 hover:text-gray-600 mr-4">
                    <i class="ri-notification-3-line"></i>
                </button>
            </div>
            <div class="dropdown">
                <div class="container py-4 max-h-140 overflow-y-auto bg-white shadow-lg rounded-lg absolute right-0 mt-2">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="mb-0">Earlier</h5>
                        <a href="#" class="text-primary text-decoration-none">See all</a>
                    </div>

                    <div class="list-group">
                        <!-- Friend Request Acceptance -->
                        <div class="list-group-item border-0 d-flex align-items-center gap-3">
                            <div class="position-relative">
                                <img src="/placeholder.svg?height=40&width=40" class="rounded-circle" width="40" height="40" alt="Profile picture">
                                <div class="position-absolute bottom-0 end-0 bg-primary rounded-circle p-1">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="white" viewBox="0 0 16 16">
                                        <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z" />
                                    </svg>
                                </div>
                            </div>
                            <div class="flex-grow-1">
                                <p class="mb-0"><strong>Jid Cotejo</strong> accepted your friend request.</p>
                                <small class="text-muted">12h</small>
                            </div>
                        </div>

                        <!-- Education Update -->
                        <div class="list-group-item border-0 d-flex align-items-center gap-3">
                            <div class="position-relative">
                                <img src="/placeholder.svg?height=40&width=40" class="rounded-circle" width="40" height="40" alt="Profile picture">
                                <div class="position-absolute bottom-0 end-0 bg-primary rounded-circle p-1">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="white" viewBox="0 0 16 16">
                                        <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z" />
                                    </svg>
                                </div>
                            </div>
                            <div class="flex-grow-1">
                                <p class="mb-0"><strong>André Erasmo</strong> is at <strong>Cebu Institute of Technology - University</strong> with <strong>Justine Jam Cotejo</strong></p>
                                <div class="d-flex align-items-center gap-2">
                                    <small class="text-muted">13h</small>
                                    <small class="text-muted">42 reactions</small>
                                    <small class="text-muted">1 comment</small>
                                </div>
                            </div>
                            <div class="text-primary">•</div>
                        </div>

                        <!-- Story Views -->
                        <div class="list-group-item border-0 d-flex align-items-center gap-3">
                            <div class="position-relative">
                                <img src="/placeholder.svg?height=40&width=40" class="rounded" width="40" height="40" alt="Story thumbnail">
                            </div>
                            <div class="flex-grow-1">
                                <p class="mb-0">Your last story got 415 views before it expired. You can create a new story.</p>
                                <small class="text-muted">2d</small>
                            </div>
                        </div>

                        <!-- Featured List -->
                        <div class="list-group-item border-0 d-flex align-items-center gap-3">
                            <div class="position-relative">
                                <img src="/placeholder.svg?height=40&width=40" class="rounded-circle" width="40" height="40" alt="Profile picture">
                            </div>
                            <div class="flex-grow-1">
                                <p class="mb-0">You're featured on <strong>Dennis E. Albiso</strong>'s public weekly engagement list.</p>
                                <small class="text-muted">3d</small>
                            </div>
                            <div class="text-primary">•</div>
                        </div>
                    </div>

                    <button class="btn btn-light w-100 mt-3">See previous notifications</button>
                </div>
            </div>
        </div>
        <!-- Profile Section -->
        <div class="flex items-center">
            <div class="text-left mr-1">
                <div class="text-gray-800 font-regular text-xs">@HttpContextAccessor.HttpContext.Session.GetString("UserName")</div>
            </div>
            <img src="https://placehold.co/32x32" alt="Profile" class="w-10 h-10 rounded-md object-cover" />
        </div>
    </ul>
</div>

<div class="grid grid-cols-1 gap-6 pb-6 h-screen w-full overflow-hidden">
    <div class="bg-white h-full border border-gray-100 shadow-md shadow-black/5 p-6 rounded-md col-span-2">

        <div class="flex justify-between mb-6">
            @*<div>
                <div class="text-sm font-medium text-gray-400">ALL ABOUT US</div>
            </div>*@
        </div>

        <div class="container mt-4">
            <h2>Tickets</h2>
            <button type="button" class="btn btn-primary mb-3" data-toggle="modal" data-target="#createTicketModal">
                Create New Ticket
            </button>

            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Category</th>
                        <th>Priority</th>
                        <th>Status</th>
                        <th>Created On</th>
                        <th>Assigned To</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ticket in Model)
                    {
                        <tr>
                            <td>@ticket.Title</td>
                            <td>@ticket.Category</td>
                            <td>@ticket.Priority</td>
                            <td>@ticket.Status</td>
                            <td>@ticket.CreatedOn.ToString("g")</td>
                            <td>@(ticket.AssignedToName ?? "Unassigned")</td>
                            <td>
                                <a asp-action="Details" asp-route-id="@ticket.TicketId" class="btn btn-info btn-sm">View</a>
                                <button class="btn btn-warning btn-sm" onclick="editTicket(@ticket.TicketId)">Edit</button>
                                <button class="btn btn-danger btn-sm" onclick="deleteTicket(@ticket.TicketId)">Delete</button>
                                <button class="btn btn-primary btn-sm" onclick="showAssignModal(@ticket.TicketId)">Assign</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div>
            <canvas id="order-chart"></canvas>
        </div>
    </div>
</div>

<!-- Create Ticket Modal -->
<div class="modal fade" id="createTicketModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Ticket</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <form id="createTicketForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="Title">Title</label>
                        <input name="Title" id="Title" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label for="Content">Description</label>
                        <textarea name="Content" id="Content" class="form-control" rows="4" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="Category">Category</label>
                        <select name="Category" id="Category" class="form-control" required>
                            <option value="Bug">Bug</option>
                            <option value="Feature">Feature Request</option>
                            <option value="Support">Support</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="Priority">Priority</label>
                        <select name="Priority" id="Priority" class="form-control" required>
                            <option value="1">Low</option>
                            <option value="2">Medium</option>
                            <option value="3">High</option>
                            <option value="4">Critical</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Attachments</label>
                        <input type="file" id="attachmentInput" class="form-control-file" multiple />
                        <div id="attachmentsList" class="mt-2"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Create Ticket</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Assign Ticket Modal -->
<div class="modal fade" id="assignTicketModal" tabindex="-1" role="dialog" aria-labelledby="assignTicketModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Assign Ticket</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <form id="assignTicketForm">
                <input type="hidden" id="ticketId" name="TicketId" />
                <div class="modal-body">
                    <div class="form-group">
                        <label for="AssignedTo">Assign To</label>
                        <select name="AssignedTo" id="AssignedTo" class="form-control" required>
                            <!-- Options will be populated dynamically -->
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" onclick="removeAssignment()">Remove Assignment</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Assign</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            if (typeof $().modal === 'undefined') {
                console.error('Bootstrap modal is not loaded');
            } else {
                console.log('Bootstrap modal is loaded correctly');
            }

            let pendingAttachments = [];

            $('#attachmentInput').change(function (e) {
                const files = e.target.files;
                for (let i = 0; i < files.length; i++) {
                    pendingAttachments.push(files[i]);
                    displayPendingAttachment(files[i], pendingAttachments.length - 1);
                }
                $(this).val('');
            });

            function displayPendingAttachment(file, index) {
                const html = `
                            <div class="attachment-item d-flex justify-content-between align-items-center mb-2">
                                <span>${file.name}</span>
                                <button type="button" class="btn btn-danger btn-sm" onclick="window.removePendingAttachment(${index})">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        `;
                $('#attachmentsList').append(html);
            }

            window.removePendingAttachment = function (index) {
                pendingAttachments.splice(index, 1);
                refreshPendingAttachments();
            };

            function refreshPendingAttachments() {
                $('#attachmentsList').empty();
                pendingAttachments.forEach((file, index) => {
                    displayPendingAttachment(file, index);
                });
            }

            $('#createTicketForm').submit(function (e) {
                e.preventDefault();
                const formData = new FormData(this);

                // Add each pending attachment to the form data
                pendingAttachments.forEach(file => {
                    formData.append('attachments', file);
                });

                $.ajax({
                    url: '/Ticket/CreateTicket',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            $('#createTicketModal').modal('hide');
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to create ticket');
                        }
                    },
                    error: function () {
                        toastr.error('An error occurred while creating the ticket');
                    }
                });
            });

            window.showAssignModal = function (ticketId) {
                $('#ticketId').val(ticketId);

                // Load agents
                $.get('/Assignment/GetAgents', function (agents) {
                    var select = $('#AssignedTo');
                    select.empty();
                    agents.forEach(function (agent) {
                        select.append($('<option></option>')
                            .val(agent.userId)
                            .text(agent.fname + ' ' + agent.lname));
                    });

                    $('#assignTicketModal').modal('show');
                }).fail(function (error) {
                    toastr.error('Failed to load agents');
                });
            };
        });

        function deleteTicket(id) {
            if (confirm('Are you sure you want to delete this ticket?')) {
                $.ajax({
                    url: '/Ticket/DeleteTicket',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to delete ticket');
                        }
                    },
                    error: function () {
                        toastr.error('An error occurred while deleting the ticket');
                    }
                });
            }
        }

        function editTicket(id) {
            window.location.href = '/Ticket/Details/' + id;
        }

        $('#assignTicketForm').submit(function (e) {
            e.preventDefault();
            $.ajax({
                url: '/Assignment/AssignTicket',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        $('#assignTicketModal').modal('hide');
                        location.reload();
                    } else {
                        toastr.error(response.message || 'Failed to assign ticket');
                    }
                },
                error: function () {
                    toastr.error('An error occurred while assigning the ticket');
                }
            });
        });

        function removeAssignment() {
            var ticketId = $('#ticketId').val();
            if (confirm('Are you sure you want to remove the current assignment?')) {
                $.ajax({
                    url: '/Assignment/RemoveAssignment',
                    type: 'POST',
                    data: { ticketId: ticketId },
                    success: function (response) {
                        if (response.success) {
                            $('#assignTicketModal').modal('hide');
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to remove assignment');
                        }
                    },
                    error: function () {
                        toastr.error('An error occurred while removing the assignment');
                    }
                });
            }
        }
    </script>
}

    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
            transition: background-color 0.4s ease;
        }

        .dropdown .container {
            width: 300px;
            max-height: 400px;
            overflow-y: auto;
        }
    </style>
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<ASI.Basecode.Services.ServiceModels.TicketViewModel>
@{
    ViewData["Title"] = "Home Page";
}
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link href="https://unpkg.com/flowbite@1.4.7/dist/flowbite.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet">
<script src="https://unpkg.com/flowbite@1.4.7/dist/flowbite.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>




<div class="py-2 px-0 bg-absolute flex items-center sticky top-0 left-0 right-0 z-30">
    <ul class="flex items-center text-sm m-0">
        <li class="mr-2">
            <a href="#" class="text-2xl font-semibold mb-1 hover:text-gray-600 font-bold" style="color: #161571;">D A S H B O A R D</a>
        </li>
    </ul>
    <ul class="ml-auto flex items-center">
        <div class="relative">
            <div class="notification">
                <button alt="notification" class="notifs hover-pointer dropdown-toggle text-gray-400 w-8 h-8 rounded flex items-center justify-center hover:bg-gray-50 hover:text-gray-600 mr-4">
                    <i class="ri-notification-3-line"></i>
                </button>
            </div>
            <div class="dropdown">
                <div class="container py-4 max-h-140 overflow-y-auto bg-white shadow-lg rounded-lg absolute right-0 mt-2">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="mb-0">Earlier</h5>
                        <a href="#" class="text-primary text-decoration-none">See all</a>
                    </div>

                    <div class="list-group">
                        <!-- Friend Request Acceptance -->
                        <div class="list-group-item border-0 d-flex align-items-center gap-3">
                            <div class="position-relative">
                                <img src="/placeholder.svg?height=40&width=40" class="rounded-circle" width="40" height="40" alt="Profile picture">
                                <div class="position-absolute bottom-0 end-0 bg-primary rounded-circle p-1">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="white" viewBox="0 0 16 16">
                                        <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z" />
                                    </svg>
                                </div>
                            </div>
                            <div class="flex-grow-1">
                                <p class="mb-0"><strong>Jid Cotejo</strong> accepted your friend request.</p>
                                <small class="text-muted">12h</small>
                            </div>
                        </div>

                        <!-- Education Update -->
                        <div class="list-group-item border-0 d-flex align-items-center gap-3">
                            <div class="position-relative">
                                <img src="/placeholder.svg?height=40&width=40" class="rounded-circle" width="40" height="40" alt="Profile picture">
                                <div class="position-absolute bottom-0 end-0 bg-primary rounded-circle p-1">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="white" viewBox="0 0 16 16">
                                        <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z" />
                                    </svg>
                                </div>
                            </div>
                            <div class="flex-grow-1">
                                <p class="mb-0"><strong>André Erasmo</strong> is at <strong>Cebu Institute of Technology - University</strong> with <strong>Justine Jam Cotejo</strong></p>
                                <div class="d-flex align-items-center gap-2">
                                    <small class="text-muted">13h</small>
                                    <small class="text-muted">42 reactions</small>
                                    <small class="text-muted">1 comment</small>
                                </div>
                            </div>
                            <div class="text-primary">•</div>
                        </div>

                        <!-- Story Views -->
                        <div class="list-group-item border-0 d-flex align-items-center gap-3">
                            <div class="position-relative">
                                <img src="/placeholder.svg?height=40&width=40" class="rounded" width="40" height="40" alt="Story thumbnail">
                            </div>
                            <div class="flex-grow-1">
                                <p class="mb-0">Your last story got 415 views before it expired. You can create a new story.</p>
                                <small class="text-muted">2d</small>
                            </div>
                        </div>

                        <!-- Featured List -->
                        <div class="list-group-item border-0 d-flex align-items-center gap-3">
                            <div class="position-relative">
                                <img src="/placeholder.svg?height=40&width=40" class="rounded-circle" width="40" height="40" alt="Profile picture">
                            </div>
                            <div class="flex-grow-1">
                                <p class="mb-0">You're featured on <strong>Dennis E. Albiso</strong>'s public weekly engagement list.</p>
                                <small class="text-muted">3d</small>
                            </div>
                            <div class="text-primary">•</div>
                        </div>
                    </div>

                    <button class="btn btn-light w-100 mt-3">See previous notifications</button>
                </div>
            </div>
        </div>
        <!-- Profile Section -->
        <div class="flex items-center">
            <div class="text-left mr-1">
                <div class="text-gray-800 font-regular text-xs">@HttpContextAccessor.HttpContext.Session.GetString("UserName")</div>
            </div>
            <img src="https://placehold.co/32x32" alt="Profile" class="w-10 h-10 rounded-md object-cover" />
        </div>
    </ul>
</div>
@*
@if (User.IsInRole("admin") || User.IsInRole("superadmin"))
{
    <!-- Row 1 - Charts -->
    <div class="container-fluid mb-4">
        <div class="row">
            <!-- Bar Chart -->
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title text-uppercase">Monthly Tickets</h5>
                        <canvas id="barChart" height="200"></canvas>
                    </div>
                </div>
            </div>

            <!-- Pie Chart -->
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title text-uppercase">Ticket Distribution</h5>
                        <canvas id="pieChart" height="200"></canvas>
                    </div>
                </div>
            </div>

            <!-- Line Chart -->
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title text-uppercase">Ticket Trends</h5>
                        <canvas id="lineChart1" height="200"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Row 2 - Stats and Chart -->
    <div class="container-fluid mb-4">
        <div class="row">
            <!-- Column 1 - Stats Cards -->
            <div class="col-md-4">
                <div class="row">
                    <!-- Total Tickets -->
                    <div class="col-6 mb-3">
                        <div class="card bg-primary text-white">
                            <div class="card-body">
                                <h6 class="card-subtitle mb-2">Total Tickets</h6>
                                <h2 class="card-title mb-0">245</h2>
                                <small class="text-white-50">↑ 12% increase</small>
                            </div>
                        </div>
                    </div>

                    <!-- Open Tickets -->
                    <div class="col-6 mb-3">
                        <div class="card bg-warning text-white">
                            <div class="card-body">
                                <h6 class="card-subtitle mb-2">Open Tickets</h6>
                                <h2 class="card-title mb-0">85</h2>
                                <small class="text-white-50">↑ 5% increase</small>
                            </div>
                        </div>
                    </div>

                    <!-- Resolved Tickets -->
                    <div class="col-6 mb-3">
                        <div class="card bg-success text-white">
                            <div class="card-body">
                                <h6 class="card-subtitle mb-2">Resolved</h6>
                                <h2 class="card-title mb-0">142</h2>
                                <small class="text-white-50">↑ 18% increase</small>
                            </div>
                        </div>
                    </div>

                    <!-- Pending Tickets -->
                    <div class="col-6 mb-3">
                        <div class="card bg-danger text-white">
                            <div class="card-body">
                                <h6 class="card-subtitle mb-2">Pending</h6>
                                <h2 class="card-title mb-0">18</h2>
                                <small class="text-white-50">↓ 3% decrease</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Column 2 - Line Chart -->
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title text-uppercase">Weekly Resolution Rate</h5>
                        <canvas id="lineChart2" height="250"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div/>*@
@if (User.IsInRole("admin") || User.IsInRole("superadmin"))
{
    <div class="grid grid-cols-1 gap-6 mb-6">
        <div class="h-100 border border-[#7E8EF1] border-opacity-100 p-6 shadow-md shadow-#7E8EF1/5 rounded-[15px]">
            <div class="card-body" style="background-color: transparent;">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="card-title text-uppercase">Chart Viewer</h5>
                    <div>
                        <button class="btn btn-outline-primary mx-1" onclick="showChart('weekly')">Weekly Resolution Rate</button>
                        <button class="btn btn-outline-primary mx-1" onclick="showChart('monthly')">Monthly Tickets</button>
                        <button class="btn btn-outline-primary mx-1" onclick="showChart('distribution')">Ticket Distribution</button>
                        <button class="btn btn-outline-primary mx-1" onclick="showChart('trends')">Ticket Trends</button>
                    </div>
                </div>
                <div class="chart-container">
                    <canvas id="dynamicChart" height="250"></canvas>
                </div>
            </div>

        </div>
    </div>
}

<div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6">
    <div class="bg-white border border-gray-100 shadow-md shadow-black/5 p-6 rounded-md col-span-2">
        <div class="flex justify-between mb-4 items-start">
            <div class="font-medium uppercase">T i c k e t s</div>
        </div>
        <form action="" class="flex items-center mb-4">
            <div class="relative w-full mr-2">
                <input type="text" class="py-2 pr-4 pl-10 bg-gray-50 w-full outline-none border border-gray-100 rounded-md text-sm focus:border-blue-500" placeholder="Search tickets">
                <i class="ri-search-line absolute top-1/2 left-4 -translate-y-1/2 text-gray-400"></i>
            </div>
            <div class="relative">
                <select class="text-sm py-2 pl-3 pr-10 bg-gray-50 border border-gray-100 rounded-md focus:border-blue-500 outline-none appearance-none bg-select-arrow bg-no-repeat bg-[length:16px_16px] bg-[right_16px_center]">
                    <option value="">Filter</option>
                    <option value="option1">Name</option>
                    <option value="option2">Department</option>
                </select>
            </div>
            <div class="relative flex items-center ml-2">
                <div class="create-now">
                    <button type="button" id="addTicketButton" data-toggle="modal" class="px-4 py-2 bg-blue-600 text-white rounded-md flex items-center justify-center hover:bg-blue-700 transition duration-300 ease-in-out" data-target="#createTicketModal">
                        <i class="fas fa-plus"></i>
                    </button>
                </div>
            </div>
        </form>

        <div class="overflow-x-auto max-h-60">
            <table class="w-full min-w-[540px]  h-full" data-tab-for="order" data-page="active">
                <thead>
                    <tr>
                        <th class="w-1/4 text-[10px] tracking-wide font-medium text-gray-400 py-2 pl-2 bg-gray-50 text-left rounded-tl-md rounded-bl-md">Title</th>
                        <th class="w-1/4 text-[10px] tracking-wide font-medium text-gray-400 py-2 pl-2 bg-gray-50 text-left rounded-tl-md rounded-bl-md">Category</th>
                        <th class="w-1/4 text-[10px] tracking-wide font-medium text-gray-400 py-2 pl-2 bg-gray-50 text-left rounded-tl-md rounded-bl-md">Priority</th>
                        <th class="w-1/4 text-[10px] tracking-wide font-medium text-gray-400 py-2 pl-2 bg-gray-50 text-left rounded-tl-md rounded-bl-md">Status</th>
                        <th class="w-1/4 text-[10px] tracking-wide font-medium text-gray-400 py-2 pl-2 bg-gray-50 text-left rounded-tr-md rounded-br-md">Created On</th>
                        <th class="w-1/4 text-[10px] tracking-wide font-medium text-gray-400 py-2 pl-2 bg-gray-50 text-left rounded-tr-md rounded-br-md">Assigned To</th>
                        <th class="w-1/4 text-[10px] tracking-wide font-medium text-gray-400 py-2 pl-2 bg-gray-50 text-left rounded-tr-md rounded-br-md">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ticket in Model)
                    {
                        <tr>
                            <!-- Title -->
                            <td class="py-2 pl-2 border-b border-b-gray-50 max-w-xs">
                                <span class="text-gray-600 text-sm font-medium hover:text-blue-500 block truncate overflow-hidden whitespace-nowrap"
                                  style="text-overflow: ellipsis; display: block; max-width: 100%;">
                                    @ticket.Title
                                </span>
                            </td>

                            <!-- Category -->
                            <td class="py-2 pl-2 border-b border-b-gray-50 max-w-xs">
                                <span class="text-gray-600 text-sm font-medium hover:text-blue-500 block truncate overflow-hidden whitespace-nowrap"
                                  style="text-overflow: ellipsis; display: block; max-width: 100%;">
                                    @ticket.Category
                                </span>
                            </td>

                            <!-- Priority -->
                            <td class="py-2 pl-2 border-b border-b-gray-50">
                                <span class="text-gray-600 text-sm font-medium hover:text-blue-500 block truncate overflow-hidden whitespace-nowrap"
                                  style="text-overflow: ellipsis; display: block; max-width: 100%;">
                                    @ticket.Priority
                                </span>
                            </td>

                            <!-- Status -->
                            <td class="py-2 pl-2 border-b border-b-gray-50">
                                <span class="text-gray-600 text-sm font-medium hover:text-blue-500 block truncate overflow-hidden whitespace-nowrap"
                                  style="text-overflow: ellipsis; display: block; max-width: 100%;">
                                    @ticket.Status
                                </span>
                            </td>

                            <!-- Created On -->
                            <td class="py-2 pl-2 border-b border-b-gray-50">
                                <span class="text-gray-600 text-sm font-medium">
                                    @ticket.CreatedOn.ToString("g")
                                </span>
                            </td>

                            <!-- Assigned To -->
                            <td class="py-2 pl-2 border-b border-b-gray-50">
                                <span class="text-gray-600 text-sm font-medium">
                                    @(ticket.AssignedToName ?? "Unassigned")
                                </span>
                            </td>

                            <!-- Actions -->
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                <button class="assign-btn text-blue-600 hover:text-blue-900 mr-2" onclick="showAssignModal(@ticket.TicketId)">Assign</button>
                                <a asp-action="Details" asp-route-id="@ticket.TicketId"
                               class="details-btn text-green-600 hover:text-green-900 mr-2">Details</a>

                                <button type="button" onclick="editTicketModal(@ticket.TicketId)"
                                    id="editTicketButton"
                                    class="edit-btn text-red-600 hover:text-red-900 mr-2"
                                    data-toggle="modal"
                                    data-target="#editTicketModal">
                                    <i class="fas fa-pen"></i>
                                </button>
                                <button class="delete-btn text-red-600 hover:text-red-900"
                                    onclick="deleteTicket(@ticket.TicketId)">
                                    <i class="fas fa-trash"></i> <!-- Trash icon for Delete -->
                                </button>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="bg-white border border-gray-100 shadow-md shadow-black/5 p-6 rounded-md col-span-1">
        <!-- Keep Articles normal width -->
        <div class="flex justify-between mb-4 items-start">
            <div class="font-medium uppercase">A r t i c l e s</div>
        </div>
        <form action="" class="flex items-center mb-4">
            <div class="relative w-full mr-2">
                <input type="text" class="py-2 pr-4 pl-10 bg-gray-50 w-full outline-none border border-gray-100 rounded-md text-sm focus:border-blue-500" placeholder="Search articles">
                <i class="ri-search-line absolute top-1/2 left-4 -translate-y-1/2 text-gray-400"></i>
            </div>
            <select class="text-sm py-2 pl-4 pr-10 bg-gray-50 border border-gray-100 rounded-md focus:border-blue-500 outline-none appearance-none bg-select-arrow bg-no-repeat bg-[length:16px_16px] bg-[right_16px_center]">
                <option value="">All</option>
            </select>
        </form>
        <div class="overflow-x-auto">
            <table class="w-full min-w-[540px]">
                <thead>
                    <tr>
                        <th class="text-[12px] tracking-wide font-medium text-gray-400 py-2 pl-2 bg-gray-50 text-left rounded-tl-md rounded-bl-md">Articles</th>
                        <th class="text-[12px] tracking-wide font-medium text-gray-400 py-2 pl-2 bg-gray-50 text-left">Department</th>
                        <th class="text-[12px] tracking-wide font-medium text-gray-400 py-2 pl-2 bg-gray-50 text-left rounded-tr-md rounded-br-md">Status</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="py-2 pl-2 border-b border-b-gray-50">
                            <a href="@Url.Action("Tickets", "Admin")" class="text-gray-600 text-sm font-medium hover:text-blue-500 truncate">Resolved issues</a>
                        </td>
                        <td class="py-2 pl-2 border-b border-b-gray-50">
                            <span class="text-[13px] font-medium text-gray-400">CASE</span>
                        </td>
                        <td class="py-2 pl-2 border-b border-b-gray-50">
                            <span class="text-[13px] font-medium text-gray-400">Resolved</span>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
@if (User.IsInRole("User") || User.IsInRole("Agent"))
{   <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-4 p-4 md:p-6">
        <Card class="card-content">
            <CardContent className="flex items-center gap-4 p-6">
                <div style="display: flex; align-items: center; gap: 15px;">
                    <div class="icon-container">
                        <i class="fa-solid fa-chart-simple"></i>
                    </div>
                    <div>
                        <p className="text-sm font-medium leading-none bold-text">Total Tickets</p>
                        <p className="text-xl">86,575,443</p>
                    </div>
                </div>
            </CardContent>
        </Card>

        <Card class="card-content">
            <CardContent className="flex items-center gap-4 p-6">
                <div style="display: flex; align-items: center; gap: 15px;">
                    <div class="icon-container">
                        <i class="fa-solid fa-hourglass-half"></i>
                    </div>
                    <div>
                        <p className="text-sm font-medium leading-none bold-text">Pending Tickets</p>
                        <p className="text-xl">324,243,2455</p>
                    </div>
                </div>
            </CardContent>
        </Card>

        <Card class="card-content">
            <CardContent className="flex items-center gap-4 p-6">
                <div style="display: flex; align-items: center; gap: 15px;">
                    <div class="icon-container">
                        <i class="fa-regular fa-folder-open"></i>
                    </div>
                    <div>
                        <p className="text-sm font-medium leading-none bold-text">Opened Tickets</p>
                        <p className="text-xl">453,472,384</p>
                    </div>
                </div>
            </CardContent>
        </Card>

        <Card class="card-content">
            <CardContent className="flex items-center gap-4 p-6">
                <div style="display: flex; align-items: center; gap: 15px;">
                    <div class="icon-container">
                        <i class="fa-solid fa-folder-closed"></i>
                    </div>
                    <div>
                        <p className="text-sm font-medium leading-none bold-text">Closed Tickets</p>
                        <p className="text-xl">453,472,384</p>
                    </div>
                </div>
            </CardContent>
        </Card>
    </div>
}</div>


<!-- Create Ticket Modal -->
<div class="modal fade" id="createTicketModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Ticket</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <form id="createTicketForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="Title">Title</label>
                        <input name="Title" id="Title" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label for="Content">Description</label>
                        <textarea name="Content" id="Content" class="form-control" rows="4" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="Category">Category</label>
                        <select name="Category" id="Category" class="form-control" required>
                            <option value="Bug">Bug</option>
                            <option value="Feature">Feature Request</option>
                            <option value="Support">Support</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="Priority">Priority</label>
                        <select name="Priority" id="Priority" class="form-control" required>
                            <option value="1">Low</option>
                            <option value="2">Medium</option>
                            <option value="3">High</option>
                            <option value="4">Critical</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Attachments</label>
                        <input type="file" id="attachmentInput" class="form-control-file" multiple />
                        <div id="attachmentsList" class="mt-2"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Create Ticket</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            if (typeof $().modal === 'undefined') {
                console.error('Bootstrap modal is not loaded');
            } else {
                console.log('Bootstrap modal is loaded correctly');
            }

            let pendingAttachments = [];

            $('#attachmentInput').change(function (e) {
                const files = e.target.files;
                for (let i = 0; i < files.length; i++) {
                    pendingAttachments.push(files[i]);
                    displayPendingAttachment(files[i], pendingAttachments.length - 1);
                }
                $(this).val('');
            });

            function displayPendingAttachment(file, index) {
                const html = `
                            <div class="attachment-item d-flex justify-content-between align-items-center mb-2">
                                <span>${file.name}</span>
                                <button type="button" class="btn btn-danger btn-sm" onclick="window.removePendingAttachment(${index})">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        `;
                $('#attachmentsList').append(html);
            }

            window.removePendingAttachment = function (index) {
                pendingAttachments.splice(index, 1);
                refreshPendingAttachments();
            };

            function refreshPendingAttachments() {
                $('#attachmentsList').empty();
                pendingAttachments.forEach((file, index) => {
                    displayPendingAttachment(file, index);
                });
            }

            $('#createTicketForm').submit(function (e) {
                e.preventDefault();
                const formData = new FormData(this);

                // Add each pending attachment to the form data
                pendingAttachments.forEach(file => {
                    formData.append('attachments', file);
                });

                $.ajax({
                    url: '/Ticket/CreateTicket',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            $('#createTicketModal').modal('hide');
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to create ticket');
                        }
                    },
                    error: function () {
                        toastr.error('An error occurred while creating the ticket');
                    }
                });
            });

            window.showAssignModal = function (ticketId) {
                $('#ticketId').val(ticketId);

                // Load agents
                $.get('/Assignment/GetAgents', function (agents) {
                    var select = $('#AssignedTo');
                    select.empty();
                    agents.forEach(function (agent) {
                        select.append($('<option></option>')
                            .val(agent.userId)
                            .text(agent.fname + ' ' + agent.lname));
                    });

                    $('#assignTicketModal').modal('show');
                }).fail(function (error) {
                    toastr.error('Failed to load agents');
                });
            };
        });

        function deleteTicket(id) {
            if (confirm('Are you sure you want to delete this ticket?')) {
                $.ajax({
                    url: '/Ticket/DeleteTicket',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to delete ticket');
                        }
                    },
                    error: function () {
                        toastr.error('An error occurred while deleting the ticket');
                    }
                });
            }
        }

        function editTicket(id) {
            window.location.href = '/Ticket/Details/' + id;
        }

        $('#assignTicketForm').submit(function (e) {
            e.preventDefault();
            $.ajax({
                url: '/Assignment/AssignTicket',
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        $('#assignTicketModal').modal('hide');
                        location.reload();
                    } else {
                        toastr.error(response.message || 'Failed to assign ticket');
                    }
                },
                error: function () {
                    toastr.error('An error occurred while assigning the ticket');
                }
            });
        });

        function removeAssignment() {
            var ticketId = $('#ticketId').val();
            if (confirm('Are you sure you want to remove the current assignment?')) {
                $.ajax({
                    url: '/Assignment/RemoveAssignment',
                    type: 'POST',
                    data: { ticketId: ticketId },
                    success: function (response) {
                        if (response.success) {
                            $('#assignTicketModal').modal('hide');
                            location.reload();
                        } else {
                            toastr.error(response.message || 'Failed to remove assignment');
                        }
                    },
                    error: function () {
                        toastr.error('An error occurred while removing the assignment');
                    }
                });
            }
        }
    </script>
    <script>
        let chart; // Store the Chart.js instance

        // Function to initialize the chart
        function initializeChart(type = 'line', label = 'Resolution Rate', data = [65, 59, 80, 81, 56, 55, 40], labels = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']) {
            const ctx = document.getElementById('dynamicChart').getContext('2d');

            if (chart) chart.destroy(); // Destroy the previous chart instance

            chart = new Chart(ctx, {
                type: type,
                data: {
                    labels: labels,
                    datasets: [{
                        label: label,
                        data: data,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        tension: 0.1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true
                }
            });
        }

        // Default chart on page load
        document.addEventListener('DOMContentLoaded', function () {
            initializeChart();
        });

        // Function to show the desired chart
        function showChart(chartType) {
            switch (chartType) {
                case 'weekly':
                    initializeChart('line', 'Resolution Rate', [65, 59, 80, 81, 56, 55, 40], ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']);
                    break;
                case 'monthly':
                    initializeChart('bar', 'Monthly Tickets', [12, 19, 3, 5, 2, 3], ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun']);
                    break;
                case 'distribution':
                    initializeChart('pie', 'Ticket Distribution', [12, 19, 3], ['Open', 'Closed', 'Pending']);
                    break;
                case 'trends':
                    initializeChart('line', 'Ticket Trends', [12, 19, 3, 5, 2, 3], ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun']);
                    break;
                default:
                    console.error('Unknown chart type:', chartType);
            }
        }
    </script>

}

<style>
    body {
        margin: 0;
        font-family: Arial, sans-serif;
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
        transition: background-color 0.4s ease;
    }

    .dropdown .container {
        width: 300px;
        max-height: 400px;
        overflow-y: auto;
    }

    .card-body {
        position: relative;
        height: 100%;
        width: 100%;
    }
    
    canvas {
        max-height: 300px; /* Adjust this value as needed */
    }
    
    .chart-container {
        position: relative;
        height: 100%;
        width: 100%;
    }
    .chart-container {
        position: relative;
        height: 300px; /* Adjust height as needed */
    }
    .btn {
        font-size: 14px;
        padding: 5px 10px;
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Set default chart options with maintainAspectRatio
        const defaultOptions = {
            responsive: true,
            maintainAspectRatio: true,
            aspectRatio: 2, // You can adjust this value to change height/width ratio
        };

        // Initialize Bar Chart
        const barCtx = document.getElementById('barChart').getContext('2d');
        new Chart(barCtx, {
            type: 'bar',
            data: {
                // Your data here
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
                datasets: [{
                    label: 'Monthly Tickets',
                    data: [12, 19, 3, 5, 2, 3],
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: defaultOptions
        });

        // Initialize Pie Chart
        const pieCtx = document.getElementById('pieChart').getContext('2d');
        new Chart(pieCtx, {
            type: 'pie',
            data: {
                // Your data here
                labels: ['Open', 'Closed', 'Pending'],
                datasets: [{
                    data: [12, 19, 3],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: defaultOptions
        });

        // Initialize Line Charts
        const lineCtx1 = document.getElementById('lineChart1').getContext('2d');
        new Chart(lineCtx1, {
            type: 'line',
            data: {
                // Your data here
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
                datasets: [{
                    label: 'Ticket Trends',
                    data: [12, 19, 3, 5, 2, 3],
                    borderColor: 'rgba(75, 192, 192, 1)',
                    tension: 0.1
                }]
            },
            options: defaultOptions
        });

        const lineCtx2 = document.getElementById('lineChart2').getContext('2d');
        new Chart(lineCtx2, {
            type: 'line',
            data: {
                // Your data here
                labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
                datasets: [{
                    label: 'Resolution Rate',
                    data: [65, 59, 80, 81, 56, 55, 40],
                    borderColor: 'rgba(153, 102, 255, 1)',
                    tension: 0.1
                }]
            },
            options: defaultOptions
        });
    });
</script>